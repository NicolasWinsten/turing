[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\mjwin\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\mjwin\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_241)
[debug]       Load.loadUnit: plugins took 85.1977ms
[debug]       Load.loadUnit: defsScala took 0.2671ms
[debug] [Loading] Scanning directory C:\Users\mjwin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\mjwin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.7153 ms
[debug]           Load.resolveProject(global-plugins) took 37.4848ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\mjwin\.sbt\1.0\plugins, plugins: List(<none>))) took 73.9786ms
[debug] [Loading] Done in C:\Users\mjwin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 91.1079ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1904ms
[debug]     Load.loadUnit(file:/C:/Users/mjwin/.sbt/1.0/plugins/, ...) took 182.5225ms
[debug]   Load.apply: load took 431.7239ms
[debug]   Load.apply: resolveProjects took 5.1808ms
[debug]   Load.apply: finalTransforms took 45.4264ms
[debug]   Load.apply: config.delegates took 6.2905ms
[debug]   Load.apply: Def.make(settings)... took 323.3696ms
[debug]   Load.apply: structureIndex took 102.4442ms
[debug]   Load.apply: mkStreams took 1.9752ms
[info] loading global plugins from C:\Users\mjwin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2376.2869ms
[debug]           Load.loadUnit: plugins took 27.1203ms
[debug]           Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\mjwin\IdeaProjects\TM-sim\project
[debug]             Load.loadUnit: mkEval took 0.2842ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\mjwin\IdeaProjects\TM-sim\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1192 ms
[info] loading settings for project tm-sim-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(tm-sim-build) took 32.6544ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tm-sim-build, base: C:\Users\mjwin\IdeaProjects\TM-sim\project, plugins: List(<none>))) took 35.209ms
[debug] [Loading] Done in C:\Users\mjwin\IdeaProjects\TM-sim\project, returning: (tm-sim-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1947.4132ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.9416ms
[debug]         Load.loadUnit(file:/C:/Users/mjwin/IdeaProjects/TM-sim/project/, ...) took 1979.4546ms
[debug]       Load.apply: load took 1980.6757ms
[debug]       Load.apply: resolveProjects took 0.075ms
[debug]       Load.apply: finalTransforms took 9.1722ms
[debug]       Load.apply: config.delegates took 0.4468ms
[debug]       Load.apply: Def.make(settings)... took 90.1664ms
[debug]       Load.apply: structureIndex took 23.057ms
[debug]       Load.apply: mkStreams took 0.0023ms
[info] loading project definition from C:\Users\mjwin\IdeaProjects\TM-sim\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4205.5076ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory C:\Users\mjwin\IdeaProjects\TM-sim
[debug]       Load.loadUnit: mkEval took 0.2172ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\mjwin\IdeaProjects\TM-sim, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,org.scalajs.sbtplugin.ScalaJSPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0459 ms
[info] loading settings for project tm-sim from build.sbt ...
[debug]         Load.resolveProject(tm-sim) took 89.001ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tm-sim, base: C:\Users\mjwin\IdeaProjects\TM-sim, plugins: List(<none>))) took 92.3379ms
[debug] [Loading] Done in C:\Users\mjwin\IdeaProjects\TM-sim, returning: (tm-sim)
[debug]     Load.loadUnit: loadedProjectsRaw took 1669.389ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.0911ms
[debug]   Load.loadUnit(file:/C:/Users/mjwin/IdeaProjects/TM-sim/, ...) took 5890.5512ms
[debug] Load.apply: load took 5892.3868ms
[debug] Load.apply: resolveProjects took 0.0964ms
[debug] Load.apply: finalTransforms took 37.1412ms
[debug] Load.apply: config.delegates took 0.3689ms
[debug] Load.apply: Def.make(settings)... took 91.7927ms
[debug] Load.apply: structureIndex took 26.7978ms
[debug] Load.apply: mkStreams took 0.003ms
[info] set current project to TM-sim (in build file:/C:/Users/mjwin/IdeaProjects/TM-sim/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58577 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58577, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to TM-sim (in build file:/C:/Users/mjwin/IdeaProjects/TM-sim/)
[debug] > Exec(idea-shell, None, None)
